const registrations = [
  {
    id: "1111",
    data: () => ({
      carBrand: "현대",
      carName: "아반떼",
      carNumber: "1111",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "김민재",
      rentalFee: "8000",
      tags: ["#비즈니스", "#친구들과 함께"],
      startTime: "",
      endTime: "",
      status: "대기중",
      guestID: "",
      guestName: "",
    }),
  },
  {
    id: "2222",
    data: () => ({
      carBrand: "기아",
      carName: "K5",
      carNumber: "2222",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "이현우",
      rentalFee: "9000",
      tags: ["#장거리 운전용", "#가족과 함께"],
      startTime: "2025-06-15T09:00:00.000Z",
      endTime: "2025-06-16T17:00:00.000Z",
      status: "사용중",
      guestID: "guest_uid_001",
      guestName: "최가은",
    }),
  },
  {
    id: "3333",
    data: () => ({
      carBrand: "쉐보레",
      carName: "스파크",
      carNumber: "3333",
      carType: "소형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "박서준",
      rentalFee: "6500",
      tags: ["#혼자 힐링", "#도심 드라이브"],
      startTime: "",
      endTime: "",
      status: "대기중",
      guestID: "",
      guestName: "",
    }),
  },
];

const userDocs = {
  Y6HOXIlu04d7e4n3GXc9UNzrt4k2: {
    address: "박박시 박박동",
    birth: "1999-01-01",
    email: "jeahwan40@gmail.com",
    name: "탈모단조",
    paymentMethods: [
      {
        type: "card",
        company: "국민카드",
        number: "1111111111111111",
        owner: "ㄱㄱㄱ",
        expiry: "11/22",
        cvc: "112",
      },
      {
        type: "account",
        bank: "우리은행",
        number: "123123123123",
        owner: "ㄱㄱㄱ",
      },
    ],
  },
};

// requests, archives 배열의 각 data도 () => {} 함수로 수정!
const requests = [
  {
    id: "req-pending-me",
    data: () => ({
      carBrand: "현대",
      carName: "아반떼",
      carNumber: "1111",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "김민재",
      rentalFee: "8000",
      tags: ["#비즈니스", "#친구들과 함께"],
      address: "서울 종로구 세종대로 1",
      startTime: "2025-07-01T08:00:00.000Z",
      endTime: "2025-07-02T20:00:00.000Z",
      status: "대기중",
      guestID: "guest_uid_100",
      guestName: "송지훈",
      totalFee: "16000",
      requestedAt: "2025-06-20T13:00:00.000Z",
    }),
  },
  {
    id: "req-pending-other-overlap",
    data: () => ({
      carBrand: "현대",
      carName: "아반떼",
      carNumber: "1111",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "김민재",
      rentalFee: "8000",
      tags: ["#비즈니스", "#친구들과 함께"],
      address: "서울 서초구 반포대로 22",
      startTime: "2025-07-02T12:00:00.000Z",
      endTime: "2025-07-03T14:00:00.000Z",
      status: "대기중",
      guestID: "guest_uid_101",
      guestName: "이채린",
      totalFee: "14000",
      requestedAt: "2025-06-21T10:00:00.000Z",
    }),
  },
  {
    id: "req-pending-other-car",
    data: () => ({
      carBrand: "쉐보레",
      carName: "스파크",
      carNumber: "3333",
      carType: "소형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "박서준",
      rentalFee: "6500",
      tags: ["#혼자 힐링", "#도심 드라이브"],
      address: "부산 해운대구 센텀서로 55",
      startTime: "2025-07-05T10:00:00.000Z",
      endTime: "2025-07-06T15:00:00.000Z",
      status: "대기중",
      guestID: "guest_uid_102",
      guestName: "김유진",
      totalFee: "13000",
      requestedAt: "2025-06-22T16:00:00.000Z",
    }),
  },
];

// archives도 data: () => ({ ... })로 통일
const archives = [
  {
    id: "arch-finished-rated",
    data: () => ({
      carBrand: "현대",
      carName: "아반떼",
      carNumber: "1111",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "김민재",
      rentalFee: "8000",
      tags: ["#비즈니스", "#친구들과 함께"],
      address: "서울 종로구 세종대로 1",
      startTime: "2025-05-15T10:00:00.000Z",
      endTime: "2025-05-16T20:00:00.000Z",
      status: "완료",
      guestID: "guest_uid_100",
      guestName: "송지훈",
      totalFee: "16000",
      requestedAt: "2025-05-10T12:00:00.000Z",
      rate: 4,
      show: true,
      archivedAt: "2025-05-16T22:00:00.000Z",
    }),
  },
  {
    id: "arch-in-progress",
    data: () => ({
      carBrand: "기아",
      carName: "K5",
      carNumber: "2222",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "이현우",
      rentalFee: "9000",
      tags: ["#장거리 운전용", "#가족과 함께"],
      address: "인천 연수구 인천타워대로 25",
      startTime: "2025-06-15T09:00:00.000Z",
      endTime: "2025-06-16T17:00:00.000Z",
      status: "사용중",
      guestID: "guest_uid_103",
      guestName: "황정민",
      totalFee: "18000",
      requestedAt: "2025-06-10T14:00:00.000Z",
      rate: null,
      show: true,
      archivedAt: "2025-06-16T18:00:00.000Z",
    }),
  },
  // 거부
  {
    id: "arch-rejected",
    data: () => ({
      carBrand: "현대",
      carName: "아반떼",
      carNumber: "1111",
      carType: "중형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "김민재",
      rentalFee: "8000",
      tags: ["#비즈니스", "#친구들과 함께"],
      address: "서울 서초구 반포대로 22",
      startTime: "2025-07-02T12:00:00.000Z",
      endTime: "2025-07-03T14:00:00.000Z",
      status: "거부",
      guestID: "guest_uid_101",
      guestName: "이채린",
      totalFee: "14000",
      requestedAt: "2025-06-21T10:00:00.000Z",
      rate: null,
      show: true,
      archivedAt: "2025-07-03T16:00:00.000Z",
    }),
  },
  // soft delete(숨김)
  {
    id: "arch-deleted",
    data: () => ({
      carBrand: "쉐보레",
      carName: "스파크",
      carNumber: "3333",
      carType: "소형",
      hostID: "Y6HOXIlu04d7e4n3GXc9UNzrt4k2",
      hostName: "박서준",
      rentalFee: "6500",
      tags: ["#혼자 힐링", "#도심 드라이브"],
      address: "부산 해운대구 센텀서로 55",
      startTime: "2025-07-05T10:00:00.000Z",
      endTime: "2025-07-06T15:00:00.000Z",
      status: "완료",
      guestID: "guest_uid_102",
      guestName: "김유진",
      totalFee: "13000",
      requestedAt: "2025-06-22T16:00:00.000Z",
      rate: 5,
      show: false,
      archivedAt: "2025-07-06T20:00:00.000Z",
    }),
  },
];

module.exports = {
  getFirestore: () => ({}),
  collection: (db, col) => ({ id: col }),
  query: (...args) => {
    // 그냥 collection 객체 반환 (args에서 조건 활용 가능)
    return args[0];
  },
  where: jest.fn(),
  getDocs: jest.fn(async (col) => {
    if (col.id === "registrations") return { docs: registrations };
    if (col.id === "requests") return { docs: requests };
    if (col.id === "archives") return { docs: archives };
    return { docs: [] };
  }),
  getDoc: jest.fn(async (ref) => {
    const uid = ref.id;
    return {
      exists: () => !!userDocs[uid],
      data: () => userDocs[uid] || null,
    };
  }),
  doc: (db, col, id) => ({ id }),
  updateDoc: jest.fn(),
  setDoc: jest.fn(),
  deleteDoc: jest.fn(),
  arrayUnion: jest.fn(),
  arrayRemove: jest.fn(),
};